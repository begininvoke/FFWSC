<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FFWSC"
        xmlns:ControlzEx="clr-namespace:ControlzEx;assembly=MaterialDesignThemes.Wpf" x:Name="FFWSC" x:Class="FFWSC.MainWindow"
        mc:Ignorable="d"
        Title="Find Files With Similar Contents (FFWSC)" Height="450" Width="800" Activated="FFWSC_Activated" BorderBrush="#FF0B6D9B" Foreground="#FFC3C3C3" AllowDrop="True" Icon="14s.ico" WindowStyle="ThreeDBorderWindow" Background="#FF2C3E50" FontFamily="Calibri" Drop="FFWSC_Drop">
    <Window.Resources>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Click">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="11*"/>
                                <RowDefinition Height="7*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox FlowDirection="LeftToRight" Height="18" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="18" Grid.RowSpan="2">
                                <Canvas Height="24" Width="24" Background="{x:Null}">
                                    <Path x:Name="Graphic" Data="M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3 M19,5L19,19 5,19 5,5 19,5z" Fill="{DynamicResource MaterialDesignCheckBoxOff}"/>
                                    <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Height="0" IsHitTestVisible="False" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Width="0">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.RowSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.HighlightTextColor}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">

                                <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Data" TargetName="Graphic" Value="M6,13L6,11 18,11 18,13 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource ValidationErrorBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#2C3E50" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" AutomationProperties.IsColumnHeader="True">
        <Grid.Effect>
            <DropShadowEffect/>
        </Grid.Effect>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="206*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="569*"/>
        </Grid.ColumnDefinitions>
        <Button x:Name="BTNchoice" Content="Choose" Margin="39,34,0,0" Click="Button_Click" HorizontalAlignment="Left" Width="86" Height="38" VerticalAlignment="Top" Grid.Column="2" Background="#FF2C3E50" BorderBrush="#3498DB"/>
        <TextBox x:Name="TXTaddress" Margin="16,34,0,0" TextWrapping="Wrap" Height="23" VerticalAlignment="Top" HorizontalAlignment="Left" Width="220" Grid.ColumnSpan="3" FontSize="10" BorderBrush="#ECF0F1"/>
        <ProgressBar x:Name="PRque" Margin="10,0,10,10.5" Height="10" VerticalAlignment="Bottom" Grid.ColumnSpan="3" Background="#FF2C3E50" BorderBrush="#FF2C3E50" Foreground="#FF2980B9"/>
        <Button x:Name="BTNselectdir" Content="Directory" HorizontalAlignment="Left" Margin="16,90,0,0" VerticalAlignment="Top" Width="122" Click="BTNselectdir_Click" Background="#FF2C3E50" Foreground="#DDFFFFFF" BorderBrush="#3498DB"/>
        <Button x:Name="BTNscan" Content="Scan" Margin="39,90,0,0" Height="32" HorizontalAlignment="Left" Width="86" VerticalAlignment="Top" Grid.Column="2" Click="Button_Click_1" Background="#2980B9" BorderBrush="#3498DB"/>
        <Label x:Name="LBLqu" Content="0" Margin="75,0,30,33.5" Height="24" VerticalAlignment="Bottom" Foreground="#DDFFFFFF"/>
        <Label x:Name="inque" Content="In Queue" HorizontalAlignment="Left" Margin="13,0,0,32.5" Height="24" VerticalAlignment="Bottom" Foreground="#DDF2F2F2" Width="57"/>
        <ListView x:Name="ListView"  Margin="163,19,10,40.5" Foreground="#DDFFFFFF" HorizontalContentAlignment="Stretch" MouseDoubleClick="ListView_MouseClick" AutomationProperties.IsColumnHeader="True" BorderBrush="#3498DB" AutomationProperties.HelpText="&quot;Click To Open Directory&quot;" SelectionMode="Single" ForceCursor="True" Grid.Column="2" >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">

                    <Setter Property="HorizontalAlignment" Value="Stretch"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Color}" Value="Green">
                            <Setter  Property="Background" Value="#16A085"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Color}" Value="Red">
                            <Setter Property="Background" Value="#E74C3C"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Color}" Value="Blue">
                            <Setter Property="Background" Value="#2980B9"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>

                    <GridView.ColumnHeaderContextMenu>
                        <ContextMenu HorizontalContentAlignment="Left"/>
                    </GridView.ColumnHeaderContextMenu>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <!-- Set any properties you want to set -->
                            <Setter Property="Background" Value="#2980B9" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="BorderBrush" Value="#3498DB" />
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>

                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Header="File" 
                            DisplayMemberBinding="{Binding File}"  Width="500" />

                </GridView>

            </ListView.View>


        </ListView>
        <Button x:Name="BTNclean" Content="Clean" Grid.Column="2" Margin="39,138,0,0" Click="Button_Click_3" Background="#FF2980B9" BorderBrush="#3498DB" HorizontalAlignment="Left" Width="86" Height="32" VerticalAlignment="Top" IsEnabled="False"/>
        <Button x:Name="BTNFound" Content="Found : 0" HorizontalAlignment="Left" Margin="13,209,0,0" VerticalAlignment="Top" Width="163" Height="112" Background="#FF2980B9" BorderBrush="#FFD3C220" Cursor="Help" Visibility="Hidden">
            <Button.Effect>
                <DropShadowEffect Direction="300" RenderingBias="Quality" ShadowDepth="8"/>
            </Button.Effect>
        </Button>
        <Button x:Name="BTNexport" Content="builder" HorizontalAlignment="Left" Margin="13,318,0,0" VerticalAlignment="Top" Width="75" Click="Button_Click_2" IsEnabled="False"/>
        <RadioButton x:Name="RBmydirectory" Content="My Directory" HorizontalAlignment="Left" Margin="16,67,0,0" VerticalAlignment="Top" Foreground="White" GroupName="DIR" Background="White" Checked="RBmydirectory_Checked"/>
        <RadioButton x:Name="RBalldirectory" Content="All Directory" HorizontalAlignment="Left" Margin="114,67,0,0" VerticalAlignment="Top" Foreground="White" IsChecked="True" GroupName="DIR" BorderBrush="#FF7222FF" Background="White"/>

    </Grid>

</Window>
